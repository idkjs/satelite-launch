// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Timer$ReactTemplate from "./Timer.bs.js";

function $$default(param) {
  var initialTime = "25:00";
  var finishedTime = "00:00";
  var match = React.useState((function () {
          return ;
        }));
  var setTimerId = match[1];
  var timerId = match[0];
  var match$1 = React.useState((function () {
          return initialTime;
        }));
  var setTime = match$1[1];
  React.useEffect((function () {
          Curry._1(setTime, (function (param) {
                  return initialTime;
                }));
          return ;
        }), ([]));
  var stopPomodoro = function (param) {
    if (timerId !== undefined) {
      clearInterval(Caml_option.valFromOption(timerId));
      return Curry._1(setTimerId, (function (param) {
                    return ;
                  }));
    } else {
      return /* () */0;
    }
  };
  var updateTime = function (param) {
    var elem = document.getElementById("time");
    var startTime = elem.textContent;
    var newTime = startTime === finishedTime ? (stopPomodoro(/* () */0), finishedTime) : Timer$ReactTemplate.calculateNewTime(startTime);
    return Curry._1(setTime, (function (param) {
                  return newTime;
                }));
  };
  var startPomodoro = function (param) {
    var timerId = setInterval(updateTime, 1000);
    return Curry._1(setTimerId, (function (param) {
                  return Caml_option.some(timerId);
                }));
  };
  var resetPomodoro = function (param) {
    stopPomodoro(/* () */0);
    return Curry._1(setTime, (function (param) {
                  return initialTime;
                }));
  };
  return /* tuple */[
          match$1[0],
          startPomodoro,
          stopPomodoro,
          resetPomodoro
        ];
}

export {
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
